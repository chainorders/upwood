// This file was generated by the build script. Do not edit it manually.
/* eslint-disable no-mixed-spaces-and-tabs */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* tslint:disable:no-unused-variable */
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-nocheck
import {
	ContractEvent,
	ContractName,
	EntrypointName,
	ModuleReference,
} from "@concordium/web-sdk";
import { InitMethod, ReceiveMethod } from "../GenericContract";
export const CONTRACT_NAME = "security_p2p_trading";
export type initRequest = {
	currency: { contract: { index: number; subindex: number }; id: string };
	agents: Array<{
		address:
			| { Account: [string] }
			| { Contract: [{ index: number; subindex: number }] };
		roles: Array<
			| { AddMarket: Record<string, never> }
			| { RemoveMarket: Record<string, never> }
			| { Operator: Record<string, never> }
		>;
	}>;
};
export const initRequestSchemaBase64 =
	"FAACAAAACAAAAGN1cnJlbmN5FAACAAAACAAAAGNvbnRyYWN0DAIAAABpZB0ABgAAAGFnZW50cxACFAACAAAABwAAAGFkZHJlc3MVAgAAAAcAAABBY2NvdW50AQEAAAALCAAAAENvbnRyYWN0AQEAAAAMBQAAAHJvbGVzEAIVAwAAAAkAAABBZGRNYXJrZXQCDAAAAFJlbW92ZU1hcmtldAIIAAAAT3BlcmF0b3IC";
export const initErrorSchemaBase64 =
	"FQ4AAAAKAAAAUGFyc2VFcnJvcgIMAAAAVW5hdXRob3JpemVkAhEAAABJbnZhbGlkQ29udmVyc2lvbgIIAAAATG9nRXJyb3ICCwAAAEFnZW50RXhpc3RzAg0AAABJbnZhbGlkTWFya2V0Ag0AAABUb2tlblRyYW5zZmVyAhAAAABDdXJyZW5jeVRyYW5zZmVyAgsAAABJbnZhbGlkUmF0ZQIUAAAATWludE1hcmtldE5vdFN0YXJ0ZWQCCAAAAEFkZFRva2VuAgkAAABUb2tlbk1pbnQCEQAAAEludmFsaWRNYXJrZXRUeXBlAhgAAABNYXJrZXRUb2tlbkxpbWl0RXhjZWVkZWQC";
export type AddAgentRequest = {
	address:
		| { Account: [string] }
		| { Contract: [{ index: number; subindex: number }] };
	roles: Array<
		| { AddMarket: Record<string, never> }
		| { RemoveMarket: Record<string, never> }
		| { Operator: Record<string, never> }
	>;
};
export const addAgentRequestSchemaBase64 =
	"FAACAAAABwAAAGFkZHJlc3MVAgAAAAcAAABBY2NvdW50AQEAAAALCAAAAENvbnRyYWN0AQEAAAAMBQAAAHJvbGVzEAIVAwAAAAkAAABBZGRNYXJrZXQCDAAAAFJlbW92ZU1hcmtldAIIAAAAT3BlcmF0b3IC";
export type AddMarketRequest = {
	token_contract: { index: number; subindex: number };
	market:
		| {
				Mint: [
					{
						token_id: { start: string; diff: string; base_token_id: string };
						rate: { numerator: bigint; denominator: bigint };
						token_metadata_url: {
							url: string;
							hash: { None: Record<string, never> } | { Some: [string] };
						};
						liquidity_provider: string;
						max_token_amount: string;
					},
				];
		  }
		| {
				Transfer: [
					{
						token_id: string;
						liquidity_provider: string;
						buy_rate: { numerator: bigint; denominator: bigint };
						sell_rate: { numerator: bigint; denominator: bigint };
						max_token_amount: string;
						max_currency_amount: string;
					},
				];
		  };
};
export const addMarketRequestSchemaBase64 =
	"FAACAAAADgAAAHRva2VuX2NvbnRyYWN0DAYAAABtYXJrZXQVAgAAAAQAAABNaW50AQEAAAAUAAUAAAAIAAAAdG9rZW5faWQUAAMAAAAFAAAAc3RhcnQNBAAAAGRpZmYODQAAAGJhc2VfdG9rZW5faWQdAAQAAAByYXRlFAACAAAACQAAAG51bWVyYXRvcgULAAAAZGVub21pbmF0b3IFEgAAAHRva2VuX21ldGFkYXRhX3VybBQAAgAAAAMAAAB1cmwWAgQAAABoYXNoFQIAAAAEAAAATm9uZQIEAAAAU29tZQEBAAAAFgISAAAAbGlxdWlkaXR5X3Byb3ZpZGVyCxAAAABtYXhfdG9rZW5fYW1vdW50GyUAAAAIAAAAVHJhbnNmZXIBAQAAABQABgAAAAgAAAB0b2tlbl9pZB0AEgAAAGxpcXVpZGl0eV9wcm92aWRlcgsIAAAAYnV5X3JhdGUUAAIAAAAJAAAAbnVtZXJhdG9yBQsAAABkZW5vbWluYXRvcgUJAAAAc2VsbF9yYXRlFAACAAAACQAAAG51bWVyYXRvcgULAAAAZGVub21pbmF0b3IFEAAAAG1heF90b2tlbl9hbW91bnQbJQAAABMAAABtYXhfY3VycmVuY3lfYW1vdW50GyUAAAA=";
export type BuyError =
	| { ParseError: Record<string, never> }
	| { Unauthorized: Record<string, never> }
	| { InvalidConversion: Record<string, never> }
	| { LogError: Record<string, never> }
	| { AgentExists: Record<string, never> }
	| { InvalidMarket: Record<string, never> }
	| { TokenTransfer: Record<string, never> }
	| { CurrencyTransfer: Record<string, never> }
	| { InvalidRate: Record<string, never> }
	| { MintMarketNotStarted: Record<string, never> }
	| { AddToken: Record<string, never> }
	| { TokenMint: Record<string, never> }
	| { InvalidMarketType: Record<string, never> }
	| { MarketTokenLimitExceeded: Record<string, never> };
export const buyErrorSchemaBase64 =
	"FQ4AAAAKAAAAUGFyc2VFcnJvcgIMAAAAVW5hdXRob3JpemVkAhEAAABJbnZhbGlkQ29udmVyc2lvbgIIAAAATG9nRXJyb3ICCwAAAEFnZW50RXhpc3RzAg0AAABJbnZhbGlkTWFya2V0Ag0AAABUb2tlblRyYW5zZmVyAhAAAABDdXJyZW5jeVRyYW5zZmVyAgsAAABJbnZhbGlkUmF0ZQIUAAAATWludE1hcmtldE5vdFN0YXJ0ZWQCCAAAAEFkZFRva2VuAgkAAABUb2tlbk1pbnQCEQAAAEludmFsaWRNYXJrZXRUeXBlAhgAAABNYXJrZXRUb2tlbkxpbWl0RXhjZWVkZWQC";
export type BuyRequest = {
	contract: { index: number; subindex: number };
	amount: string;
	rate: { numerator: bigint; denominator: bigint };
};
export const buyRequestSchemaBase64 =
	"FAADAAAACAAAAGNvbnRyYWN0DAYAAABhbW91bnQbJQAAAAQAAAByYXRlFAACAAAACQAAAG51bWVyYXRvcgULAAAAZGVub21pbmF0b3IF";
export type GetMarketRequest = { index: number; subindex: number };
export const getMarketRequestSchemaBase64 = "DA==";
export type MintError =
	| { ParseError: Record<string, never> }
	| { Unauthorized: Record<string, never> }
	| { InvalidConversion: Record<string, never> }
	| { LogError: Record<string, never> }
	| { AgentExists: Record<string, never> }
	| { InvalidMarket: Record<string, never> }
	| { TokenTransfer: Record<string, never> }
	| { CurrencyTransfer: Record<string, never> }
	| { InvalidRate: Record<string, never> }
	| { MintMarketNotStarted: Record<string, never> }
	| { AddToken: Record<string, never> }
	| { TokenMint: Record<string, never> }
	| { InvalidMarketType: Record<string, never> }
	| { MarketTokenLimitExceeded: Record<string, never> };
export const mintErrorSchemaBase64 =
	"FQ4AAAAKAAAAUGFyc2VFcnJvcgIMAAAAVW5hdXRob3JpemVkAhEAAABJbnZhbGlkQ29udmVyc2lvbgIIAAAATG9nRXJyb3ICCwAAAEFnZW50RXhpc3RzAg0AAABJbnZhbGlkTWFya2V0Ag0AAABUb2tlblRyYW5zZmVyAhAAAABDdXJyZW5jeVRyYW5zZmVyAgsAAABJbnZhbGlkUmF0ZQIUAAAATWludE1hcmtldE5vdFN0YXJ0ZWQCCAAAAEFkZFRva2VuAgkAAABUb2tlbk1pbnQCEQAAAEludmFsaWRNYXJrZXRUeXBlAhgAAABNYXJrZXRUb2tlbkxpbWl0RXhjZWVkZWQC";
export type MintRequest = {
	token_contract: { index: number; subindex: number };
	amount: string;
	rate: { numerator: bigint; denominator: bigint };
};
export const mintRequestSchemaBase64 =
	"FAADAAAADgAAAHRva2VuX2NvbnRyYWN0DAYAAABhbW91bnQbJQAAAAQAAAByYXRlFAACAAAACQAAAG51bWVyYXRvcgULAAAAZGVub21pbmF0b3IF";
export type RemoveAgentRequest =
	| { Account: [string] }
	| { Contract: [{ index: number; subindex: number }] };
export const removeAgentRequestSchemaBase64 =
	"FQIAAAAHAAAAQWNjb3VudAEBAAAACwgAAABDb250cmFjdAEBAAAADA==";
export type RemoveMarketRequest = { index: number; subindex: number };
export const removeMarketRequestSchemaBase64 = "DA==";
export type SellError =
	| { ParseError: Record<string, never> }
	| { Unauthorized: Record<string, never> }
	| { InvalidConversion: Record<string, never> }
	| { LogError: Record<string, never> }
	| { AgentExists: Record<string, never> }
	| { InvalidMarket: Record<string, never> }
	| { TokenTransfer: Record<string, never> }
	| { CurrencyTransfer: Record<string, never> }
	| { InvalidRate: Record<string, never> }
	| { MintMarketNotStarted: Record<string, never> }
	| { AddToken: Record<string, never> }
	| { TokenMint: Record<string, never> }
	| { InvalidMarketType: Record<string, never> }
	| { MarketTokenLimitExceeded: Record<string, never> };
export const sellErrorSchemaBase64 =
	"FQ4AAAAKAAAAUGFyc2VFcnJvcgIMAAAAVW5hdXRob3JpemVkAhEAAABJbnZhbGlkQ29udmVyc2lvbgIIAAAATG9nRXJyb3ICCwAAAEFnZW50RXhpc3RzAg0AAABJbnZhbGlkTWFya2V0Ag0AAABUb2tlblRyYW5zZmVyAhAAAABDdXJyZW5jeVRyYW5zZmVyAgsAAABJbnZhbGlkUmF0ZQIUAAAATWludE1hcmtldE5vdFN0YXJ0ZWQCCAAAAEFkZFRva2VuAgkAAABUb2tlbk1pbnQCEQAAAEludmFsaWRNYXJrZXRUeXBlAhgAAABNYXJrZXRUb2tlbkxpbWl0RXhjZWVkZWQC";
export type SellRequest = {
	contract: { index: number; subindex: number };
	amount: string;
	rate: { numerator: bigint; denominator: bigint };
};
export const sellRequestSchemaBase64 =
	"FAADAAAACAAAAGNvbnRyYWN0DAYAAABhbW91bnQbJQAAAAQAAAByYXRlFAACAAAACQAAAG51bWVyYXRvcgULAAAAZGVub21pbmF0b3IF";
export type event =
	| {
			Initialized: [
				{ contract: { index: number; subindex: number }; id: string },
			];
	  }
	| {
			AgentAdded: [
				{
					address:
						| { Account: [string] }
						| { Contract: [{ index: number; subindex: number }] };
					roles: Array<
						| { AddMarket: Record<string, never> }
						| { RemoveMarket: Record<string, never> }
						| { Operator: Record<string, never> }
					>;
				},
			];
	  }
	| {
			AgentRemoved: [
				| { Account: [string] }
				| { Contract: [{ index: number; subindex: number }] },
			];
	  }
	| {
			MarketAdded: [
				{
					token_contract: { index: number; subindex: number };
					market:
						| {
								Mint: [
									{
										token_id: {
											start: string;
											diff: string;
											base_token_id: string;
										};
										rate: { numerator: bigint; denominator: bigint };
										token_metadata_url: {
											url: string;
											hash:
												| { None: Record<string, never> }
												| { Some: [string] };
										};
										liquidity_provider: string;
										max_token_amount: string;
									},
								];
						  }
						| {
								Transfer: [
									{
										token_id: string;
										liquidity_provider: string;
										buy_rate: { numerator: bigint; denominator: bigint };
										sell_rate: { numerator: bigint; denominator: bigint };
										max_token_amount: string;
										max_currency_amount: string;
									},
								];
						  };
				},
			];
	  }
	| {
			Exchanged: [
				{
					token_contract: { index: number; subindex: number };
					token_id: string;
					seller: string;
					buyer: string;
					token_amount: string;
					rate: { numerator: bigint; denominator: bigint };
					currency_amount: string;
					exchange_type:
						| { Buy: Record<string, never> }
						| { Sell: Record<string, never> }
						| { Mint: Record<string, never> };
				},
			];
	  }
	| { MarketRemoved: [{ index: number; subindex: number }] };
export const eventSchemaBase64 =
	"FQYAAAALAAAASW5pdGlhbGl6ZWQBAQAAABQAAgAAAAgAAABjb250cmFjdAwCAAAAaWQdAAoAAABBZ2VudEFkZGVkAQEAAAAUAAIAAAAHAAAAYWRkcmVzcxUCAAAABwAAAEFjY291bnQBAQAAAAsIAAAAQ29udHJhY3QBAQAAAAwFAAAAcm9sZXMQAhUDAAAACQAAAEFkZE1hcmtldAIMAAAAUmVtb3ZlTWFya2V0AggAAABPcGVyYXRvcgIMAAAAQWdlbnRSZW1vdmVkAQEAAAAVAgAAAAcAAABBY2NvdW50AQEAAAALCAAAAENvbnRyYWN0AQEAAAAMCwAAAE1hcmtldEFkZGVkAQEAAAAUAAIAAAAOAAAAdG9rZW5fY29udHJhY3QMBgAAAG1hcmtldBUCAAAABAAAAE1pbnQBAQAAABQABQAAAAgAAAB0b2tlbl9pZBQAAwAAAAUAAABzdGFydA0EAAAAZGlmZg4NAAAAYmFzZV90b2tlbl9pZB0ABAAAAHJhdGUUAAIAAAAJAAAAbnVtZXJhdG9yBQsAAABkZW5vbWluYXRvcgUSAAAAdG9rZW5fbWV0YWRhdGFfdXJsFAACAAAAAwAAAHVybBYCBAAAAGhhc2gVAgAAAAQAAABOb25lAgQAAABTb21lAQEAAAAWAhIAAABsaXF1aWRpdHlfcHJvdmlkZXILEAAAAG1heF90b2tlbl9hbW91bnQbJQAAAAgAAABUcmFuc2ZlcgEBAAAAFAAGAAAACAAAAHRva2VuX2lkHQASAAAAbGlxdWlkaXR5X3Byb3ZpZGVyCwgAAABidXlfcmF0ZRQAAgAAAAkAAABudW1lcmF0b3IFCwAAAGRlbm9taW5hdG9yBQkAAABzZWxsX3JhdGUUAAIAAAAJAAAAbnVtZXJhdG9yBQsAAABkZW5vbWluYXRvcgUQAAAAbWF4X3Rva2VuX2Ftb3VudBslAAAAEwAAAG1heF9jdXJyZW5jeV9hbW91bnQbJQAAAAkAAABFeGNoYW5nZWQBAQAAABQACAAAAA4AAAB0b2tlbl9jb250cmFjdAwIAAAAdG9rZW5faWQdAAYAAABzZWxsZXILBQAAAGJ1eWVyCwwAAAB0b2tlbl9hbW91bnQbJQAAAAQAAAByYXRlFAACAAAACQAAAG51bWVyYXRvcgULAAAAZGVub21pbmF0b3IFDwAAAGN1cnJlbmN5X2Ftb3VudBslAAAADQAAAGV4Y2hhbmdlX3R5cGUVAwAAAAMAAABCdXkCBAAAAFNlbGwCBAAAAE1pbnQCDQAAAE1hcmtldFJlbW92ZWQBAQAAAAw=";
export const ENTRYPOINTS: Record<string, EntrypointName.Type> = {
	addAgent: EntrypointName.fromString("addAgent"),
	addMarket: EntrypointName.fromString("addMarket"),
	buy: EntrypointName.fromString("buy"),
	getMarket: EntrypointName.fromString("getMarket"),
	mint: EntrypointName.fromString("mint"),
	removeAgent: EntrypointName.fromString("removeAgent"),
	removeMarket: EntrypointName.fromString("removeMarket"),
	sell: EntrypointName.fromString("sell"),
};
export const ENTRYPOINT_DISPLAY_NAMES: Record<string, string> = {
	addAgent: "Add Agent",
	addMarket: "Add Market",
	buy: "Buy",
	getMarket: "Get Market",
	mint: "Mint",
	removeAgent: "Remove Agent",
	removeMarket: "Remove Market",
	sell: "Sell",
};
export const securityP2PTrading = {
	init: new InitMethod<initRequest>(
		ModuleReference.fromHexString(
			"9efbc2838e63d709887abd6055c5317e76006f23e4fe94302f86d8871d121674",
		),
		ContractName.fromString("security_p2p_trading"),
		initRequestSchemaBase64,
	),
	addAgent: new ReceiveMethod<AddAgentRequest>(
		ContractName.fromString("security_p2p_trading"),
		EntrypointName.fromString("addAgent"),
		addAgentRequestSchemaBase64,
	),
	addMarket: new ReceiveMethod<AddMarketRequest>(
		ContractName.fromString("security_p2p_trading"),
		EntrypointName.fromString("addMarket"),
		addMarketRequestSchemaBase64,
	),
	buy: new ReceiveMethod<BuyRequest, never, BuyError>(
		ContractName.fromString("security_p2p_trading"),
		EntrypointName.fromString("buy"),
		buyRequestSchemaBase64,
		undefined,
		buyErrorSchemaBase64,
	),
	getMarket: new ReceiveMethod<GetMarketRequest>(
		ContractName.fromString("security_p2p_trading"),
		EntrypointName.fromString("getMarket"),
		getMarketRequestSchemaBase64,
	),
	mint: new ReceiveMethod<MintRequest, never, MintError>(
		ContractName.fromString("security_p2p_trading"),
		EntrypointName.fromString("mint"),
		mintRequestSchemaBase64,
		undefined,
		mintErrorSchemaBase64,
	),
	removeAgent: new ReceiveMethod<RemoveAgentRequest>(
		ContractName.fromString("security_p2p_trading"),
		EntrypointName.fromString("removeAgent"),
		removeAgentRequestSchemaBase64,
	),
	removeMarket: new ReceiveMethod<RemoveMarketRequest>(
		ContractName.fromString("security_p2p_trading"),
		EntrypointName.fromString("removeMarket"),
		removeMarketRequestSchemaBase64,
	),
	sell: new ReceiveMethod<SellRequest, never, SellError>(
		ContractName.fromString("security_p2p_trading"),
		EntrypointName.fromString("sell"),
		sellRequestSchemaBase64,
		undefined,
		sellErrorSchemaBase64,
	),
	deserializeEvent: (event: ContractEvent.Type): event => {
		return ContractEvent.parseWithSchemaTypeBase64(
			event,
			eventSchemaBase64,
		) as event;
	},
};
export default securityP2PTrading;
