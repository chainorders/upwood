// This file was generated by the build script. Do not edit it manually.
/* eslint-disable no-mixed-spaces-and-tabs */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* tslint:disable:no-unused-variable */
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-nocheck
import {
	ContractEvent,
	ContractName,
	EntrypointName,
	ModuleReference,
} from "@concordium/web-sdk";
import { InitMethod, ReceiveMethod } from "../GenericContract";
export const CONTRACT_NAME = "security_mint_fund";
export type initRequest = {
	currency_token: { contract: { index: number; subindex: number }; id: string };
	agents: Array<{
		address:
			| { Account: [string] }
			| { Contract: [{ index: number; subindex: number }] };
		roles: Array<
			| { AddFund: Record<string, never> }
			| { RemoveFund: Record<string, never> }
			| { UpdateFundState: Record<string, never> }
			| { Operator: Record<string, never> }
		>;
	}>;
};
export const initRequestSchemaBase64 =
	"FAACAAAADgAAAGN1cnJlbmN5X3Rva2VuFAACAAAACAAAAGNvbnRyYWN0DAIAAABpZB0ABgAAAGFnZW50cxACFAACAAAABwAAAGFkZHJlc3MVAgAAAAcAAABBY2NvdW50AQEAAAALCAAAAENvbnRyYWN0AQEAAAAMBQAAAHJvbGVzEAIVBAAAAAcAAABBZGRGdW5kAgoAAABSZW1vdmVGdW5kAg8AAABVcGRhdGVGdW5kU3RhdGUCCAAAAE9wZXJhdG9yAg==";
export const initErrorSchemaBase64 =
	"FQ8AAAAMAAAAVW5BdXRob3JpemVkAgoAAABQYXJzZUVycm9yAggAAABMb2dFcnJvcgIVAAAAQ3VycmVuY3lUb2tlblRyYW5zZmVyAhEAAABJbnZhbGlkQ29udmVyc2lvbgIQAAAASW52YWxpZEZ1bmRTdGF0ZQIJAAAAVG9rZW5NaW50AgkAAABUb2tlbkJ1cm4CDAAAAFRva2VuQmFsYW5jZQINAAAAVG9rZW5VbkZyZWV6ZQINAAAASW52YWxpZEZ1bmRJZAIPAAAASW52YWxpZEludmVzdG9yAhAAAABOb25FeGlzdGVudFRva2VuAgsAAABBZ2VudEV4aXN0cwIKAAAARnVuZEV4aXN0cwI=";
export type AddAgentRequest = {
	address:
		| { Account: [string] }
		| { Contract: [{ index: number; subindex: number }] };
	roles: Array<
		| { AddFund: Record<string, never> }
		| { RemoveFund: Record<string, never> }
		| { UpdateFundState: Record<string, never> }
		| { Operator: Record<string, never> }
	>;
};
export const addAgentRequestSchemaBase64 =
	"FAACAAAABwAAAGFkZHJlc3MVAgAAAAcAAABBY2NvdW50AQEAAAALCAAAAENvbnRyYWN0AQEAAAAMBQAAAHJvbGVzEAIVBAAAAAcAAABBZGRGdW5kAgoAAABSZW1vdmVGdW5kAg8AAABVcGRhdGVGdW5kU3RhdGUCCAAAAE9wZXJhdG9yAg==";
export type AddFundRequest = {
	token: { contract: { index: number; subindex: number }; id: string };
	rate: { numerator: bigint; denominator: bigint };
	security_token: { contract: { index: number; subindex: number }; id: string };
};
export const addFundRequestSchemaBase64 =
	"FAADAAAABQAAAHRva2VuFAACAAAACAAAAGNvbnRyYWN0DAIAAABpZB0ABAAAAHJhdGUUAAIAAAAJAAAAbnVtZXJhdG9yBQsAAABkZW5vbWluYXRvcgUOAAAAc2VjdXJpdHlfdG9rZW4UAAIAAAAIAAAAY29udHJhY3QMAgAAAGlkHQA=";
export type ClaimInvestmentRequest = {
	investments: Array<{
		security_token: {
			contract: { index: number; subindex: number };
			id: string;
		};
		investor: string;
	}>;
};
export const claimInvestmentRequestSchemaBase64 =
	"FAABAAAACwAAAGludmVzdG1lbnRzEAIUAAIAAAAOAAAAc2VjdXJpdHlfdG9rZW4UAAIAAAAIAAAAY29udHJhY3QMAgAAAGlkHQAIAAAAaW52ZXN0b3IL";
export type InvestRequest = {
	token_id: string;
	amount: string;
	from:
		| { Account: [string] }
		| { Contract: [{ index: number; subindex: number }] };
	data: { contract: { index: number; subindex: number }; id: string };
};
export const investRequestSchemaBase64 =
	"FAAEAAAACAAAAHRva2VuX2lkHQAGAAAAYW1vdW50GyUAAAAEAAAAZnJvbRUCAAAABwAAAEFjY291bnQBAQAAAAsIAAAAQ29udHJhY3QBAQAAAAwEAAAAZGF0YRQAAgAAAAgAAABjb250cmFjdAwCAAAAaWQdAA==";
export type RemoveAgentRequest =
	| { Account: [string] }
	| { Contract: [{ index: number; subindex: number }] };
export const removeAgentRequestSchemaBase64 =
	"FQIAAAAHAAAAQWNjb3VudAEBAAAACwgAAABDb250cmFjdAEBAAAADA==";
export type RemoveFundRequest = {
	contract: { index: number; subindex: number };
	id: string;
};
export const removeFundRequestSchemaBase64 =
	"FAACAAAACAAAAGNvbnRyYWN0DAIAAABpZB0A";
export type TransferInvestRequest = {
	amount: string;
	security_token: { contract: { index: number; subindex: number }; id: string };
};
export const transferInvestRequestSchemaBase64 =
	"FAACAAAABgAAAGFtb3VudBslAAAADgAAAHNlY3VyaXR5X3Rva2VuFAACAAAACAAAAGNvbnRyYWN0DAIAAABpZB0A";
export type UpdateFundStateRequest = {
	security_token: { contract: { index: number; subindex: number }; id: string };
	state:
		| {
				Success: [
					| { Account: [string] }
					| { Contract: [{ index: number; subindex: number }, string] },
				];
		  }
		| { Fail: Record<string, never> };
};
export const updateFundStateRequestSchemaBase64 =
	"FAACAAAADgAAAHNlY3VyaXR5X3Rva2VuFAACAAAACAAAAGNvbnRyYWN0DAIAAABpZB0ABQAAAHN0YXRlFQIAAAAHAAAAU3VjY2VzcwEBAAAAFQIAAAAHAAAAQWNjb3VudAEBAAAACwgAAABDb250cmFjdAECAAAADBYBBAAAAEZhaWwC";
export type event =
	| {
			Initialized: [
				{ contract: { index: number; subindex: number }; id: string },
			];
	  }
	| {
			AgentAdded: [
				{
					address:
						| { Account: [string] }
						| { Contract: [{ index: number; subindex: number }] };
					roles: Array<
						| { AddFund: Record<string, never> }
						| { RemoveFund: Record<string, never> }
						| { UpdateFundState: Record<string, never> }
						| { Operator: Record<string, never> }
					>;
				},
			];
	  }
	| {
			AgentRemoved: [
				| { Account: [string] }
				| { Contract: [{ index: number; subindex: number }] },
			];
	  }
	| {
			FundAdded: [
				{
					token: { contract: { index: number; subindex: number }; id: string };
					rate: { numerator: bigint; denominator: bigint };
					security_token: {
						contract: { index: number; subindex: number };
						id: string;
					};
				},
			];
	  }
	| {
			FundRemoved: [
				{ contract: { index: number; subindex: number }; id: string },
			];
	  }
	| {
			FundStateUpdated: [
				{
					security_token: {
						contract: { index: number; subindex: number };
						id: string;
					};
					state:
						| {
								Success: [
									| { Account: [string] }
									| { Contract: [{ index: number; subindex: number }, string] },
								];
						  }
						| { Fail: Record<string, never> };
				},
			];
	  }
	| {
			Invested: [
				{
					security_token: {
						contract: { index: number; subindex: number };
						id: string;
					};
					investor: string;
					security_amount: string;
					currency_amount: string;
				},
			];
	  }
	| {
			InvestmentClaimed: [
				{
					security_token: {
						contract: { index: number; subindex: number };
						id: string;
					};
					investor: string;
					security_amount: string;
					currency_amount: string;
				},
			];
	  }
	| {
			InvestmentCancelled: [
				{
					security_token: {
						contract: { index: number; subindex: number };
						id: string;
					};
					investor: string;
					security_amount: string;
					currency_amount: string;
				},
			];
	  };
export const eventSchemaBase64 =
	"FQkAAAALAAAASW5pdGlhbGl6ZWQBAQAAABQAAgAAAAgAAABjb250cmFjdAwCAAAAaWQdAAoAAABBZ2VudEFkZGVkAQEAAAAUAAIAAAAHAAAAYWRkcmVzcxUCAAAABwAAAEFjY291bnQBAQAAAAsIAAAAQ29udHJhY3QBAQAAAAwFAAAAcm9sZXMQAhUEAAAABwAAAEFkZEZ1bmQCCgAAAFJlbW92ZUZ1bmQCDwAAAFVwZGF0ZUZ1bmRTdGF0ZQIIAAAAT3BlcmF0b3ICDAAAAEFnZW50UmVtb3ZlZAEBAAAAFQIAAAAHAAAAQWNjb3VudAEBAAAACwgAAABDb250cmFjdAEBAAAADAkAAABGdW5kQWRkZWQBAQAAABQAAwAAAAUAAAB0b2tlbhQAAgAAAAgAAABjb250cmFjdAwCAAAAaWQdAAQAAAByYXRlFAACAAAACQAAAG51bWVyYXRvcgULAAAAZGVub21pbmF0b3IFDgAAAHNlY3VyaXR5X3Rva2VuFAACAAAACAAAAGNvbnRyYWN0DAIAAABpZB0ACwAAAEZ1bmRSZW1vdmVkAQEAAAAUAAIAAAAIAAAAY29udHJhY3QMAgAAAGlkHQAQAAAARnVuZFN0YXRlVXBkYXRlZAEBAAAAFAACAAAADgAAAHNlY3VyaXR5X3Rva2VuFAACAAAACAAAAGNvbnRyYWN0DAIAAABpZB0ABQAAAHN0YXRlFQIAAAAHAAAAU3VjY2VzcwEBAAAAFQIAAAAHAAAAQWNjb3VudAEBAAAACwgAAABDb250cmFjdAECAAAADBYBBAAAAEZhaWwCCAAAAEludmVzdGVkAQEAAAAUAAQAAAAOAAAAc2VjdXJpdHlfdG9rZW4UAAIAAAAIAAAAY29udHJhY3QMAgAAAGlkHQAIAAAAaW52ZXN0b3ILDwAAAHNlY3VyaXR5X2Ftb3VudBslAAAADwAAAGN1cnJlbmN5X2Ftb3VudBslAAAAEQAAAEludmVzdG1lbnRDbGFpbWVkAQEAAAAUAAQAAAAOAAAAc2VjdXJpdHlfdG9rZW4UAAIAAAAIAAAAY29udHJhY3QMAgAAAGlkHQAIAAAAaW52ZXN0b3ILDwAAAHNlY3VyaXR5X2Ftb3VudBslAAAADwAAAGN1cnJlbmN5X2Ftb3VudBslAAAAEwAAAEludmVzdG1lbnRDYW5jZWxsZWQBAQAAABQABAAAAA4AAABzZWN1cml0eV90b2tlbhQAAgAAAAgAAABjb250cmFjdAwCAAAAaWQdAAgAAABpbnZlc3RvcgsPAAAAc2VjdXJpdHlfYW1vdW50GyUAAAAPAAAAY3VycmVuY3lfYW1vdW50GyUAAAA=";
export const ENTRYPOINTS: Record<string, EntrypointName.Type> = {
	addAgent: EntrypointName.fromString("addAgent"),
	addFund: EntrypointName.fromString("addFund"),
	claimInvestment: EntrypointName.fromString("claimInvestment"),
	invest: EntrypointName.fromString("invest"),
	removeAgent: EntrypointName.fromString("removeAgent"),
	removeFund: EntrypointName.fromString("removeFund"),
	transferInvest: EntrypointName.fromString("transferInvest"),
	updateFundState: EntrypointName.fromString("updateFundState"),
};
export const ENTRYPOINT_DISPLAY_NAMES: Record<string, string> = {
	addAgent: "Add Agent",
	addFund: "Add Fund",
	claimInvestment: "Claim Investment",
	invest: "Invest",
	removeAgent: "Remove Agent",
	removeFund: "Remove Fund",
	transferInvest: "Transfer Invest",
	updateFundState: "Update Fund State",
};
export const securityMintFund = {
	init: new InitMethod<initRequest>(
		ModuleReference.fromHexString(
			"20cc574f628efa6afe1fb747a5676cfb47ae28ec639db9ac7a240097f23e1140",
		),
		ContractName.fromString("security_mint_fund"),
		initRequestSchemaBase64,
	),
	addAgent: new ReceiveMethod<AddAgentRequest>(
		ContractName.fromString("security_mint_fund"),
		EntrypointName.fromString("addAgent"),
		addAgentRequestSchemaBase64,
	),
	addFund: new ReceiveMethod<AddFundRequest>(
		ContractName.fromString("security_mint_fund"),
		EntrypointName.fromString("addFund"),
		addFundRequestSchemaBase64,
	),
	claimInvestment: new ReceiveMethod<ClaimInvestmentRequest>(
		ContractName.fromString("security_mint_fund"),
		EntrypointName.fromString("claimInvestment"),
		claimInvestmentRequestSchemaBase64,
	),
	invest: new ReceiveMethod<InvestRequest>(
		ContractName.fromString("security_mint_fund"),
		EntrypointName.fromString("invest"),
		investRequestSchemaBase64,
	),
	removeAgent: new ReceiveMethod<RemoveAgentRequest>(
		ContractName.fromString("security_mint_fund"),
		EntrypointName.fromString("removeAgent"),
		removeAgentRequestSchemaBase64,
	),
	removeFund: new ReceiveMethod<RemoveFundRequest>(
		ContractName.fromString("security_mint_fund"),
		EntrypointName.fromString("removeFund"),
		removeFundRequestSchemaBase64,
	),
	transferInvest: new ReceiveMethod<TransferInvestRequest>(
		ContractName.fromString("security_mint_fund"),
		EntrypointName.fromString("transferInvest"),
		transferInvestRequestSchemaBase64,
	),
	updateFundState: new ReceiveMethod<UpdateFundStateRequest>(
		ContractName.fromString("security_mint_fund"),
		EntrypointName.fromString("updateFundState"),
		updateFundStateRequestSchemaBase64,
	),
	deserializeEvent: (event: ContractEvent.Type): event => {
		return ContractEvent.parseWithSchemaTypeBase64(
			event,
			eventSchemaBase64,
		) as event;
	},
};
export default securityMintFund;
