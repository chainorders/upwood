{
  "openapi": "3.0.0",
  "info": {
    "title": "Upwood API",
    "version": "1.0.0"
  },
  "servers": [],
  "tags": [
    {
      "name": "Files",
      "description": "Operations about s3 & IPFS files"
    },
    {
      "name": "ForestProject",
      "description": "Operations about forest project & contract"
    },
    {
      "name": "IdentityRegistry",
      "description": "Operations about identity registry contract"
    },
    {
      "name": "Indexer",
      "description": "Operations reading data from indexer / events listener"
    },
    {
      "name": "InvestmentPortfolio",
      "description": "Operations about reading user investment portfolio"
    },
    {
      "name": "TreeNft",
      "description": "Operations about tree nft contract"
    },
    {
      "name": "TreeNftMetadata",
      "description": "Operations about tree nft metadata"
    },
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "UserCommunication",
      "description": "Operations about user communication"
    },
    {
      "name": "Wallet"
    }
  ],
  "paths": {
    "/user/registration-request": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequestApi"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrationRequest"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/admin/registration-request/list": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_UserRegistrationRequest"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/registration-request/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrationRequest"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/registration-request/{id}/accept/{is_accepted}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Accept or reject a user registration request.\nIf the request is accepted, the user is added to the Cognito user pool.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "is_accepted",
            "schema": {
              "type": "boolean"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Registers a user in the Cognito user pool and in the database.",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/UserCreatePostReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserKYCModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/admin/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/UserCreatePostReqAdmin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserKYCModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves the current user's information based on the provided bearer authorization token.",
        "description": "This function fetches the user's information from the database using the Cognito user ID\nfrom the bearer authorization token. It also checks if the user's account is KYC verified\nby looking up the identity registry.\n\n# Arguments\n* `db_pool` - A reference to the database connection pool.\n* `identity_registry` - A reference to the identity registry.\n* `claims` - The bearer authorization token claims.\n\n# Returns\nA `JsonResult` containing the user's information.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserKYCModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/user/list": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a list of all the users.",
        "description": "This endpoint is only accessible to admin users.\n\n# Arguments\n- `db_pool`: A reference to the database connection pool.\n- `identity_registry`: A reference to the identity registry.\n- `claims`: The authorization claims of the requesting user.\n- `page`: The page number to retrieve.\n\n# Returns\nA JSON response containing a paged list of `AdminUser` objects.",
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_UserKYCModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/holder/{token_id}/{contract}/list": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "contract",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_UserTokenHolder"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/user/affiliate/rewards/list": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_AffiliateClaim"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/user/affiliate/rewards/claim/{investment_record_id}": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "investment_record_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRequest"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/user/transactions/list": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_UserTransaction"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/user/transactions/list/download": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Disposition": {
                "description": "Indicate if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/user/affiliate/rewards/list/download": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Disposition": {
                "description": "Indicate if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/system_config": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SystemContractsConfigApiModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/notifications": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/company": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/UserCompanyCreateUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/UserCompanyCreateUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/company/invitation": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/UserCompanyInvitationCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyInvitation"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "accepted",
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/company/invitation/list": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_CompanyInvitation"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/company/members/list": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_UserKYCModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/company/members": {
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/tree_nft/contract/self_nonce": {
      "get": {
        "tags": [
          "TreeNft"
        ],
        "summary": "Retrieves the nonce for the specified contract index and the authenticated account.",
        "description": "# Arguments\n- `claims`: The authenticated account claims.\n- `contract_index`: The index of the contract to retrieve the nonce for.\n- `db_pool`: The database connection pool.\n\n# Returns\nThe nonce for the specified contract index and authenticated account.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/tree_nft/contract": {
      "get": {
        "tags": [
          "TreeNft"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/NftMultiRewardedDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/tree_nft/metadata/random/signed": {
      "get": {
        "tags": [
          "TreeNftMetadata"
        ],
        "summary": "Retrieves a random metadata entry and generates a signed metadata object for minting a new NFT.",
        "description": "# Arguments\n- `claims`: The authenticated account claims.\n- `db_pool`: The database connection pool.\n- `config`: The TreeNftConfig instance.\n- `contract_index`: The index of the contract to retrieve the metadata for.\n\n# Returns\nA `MintData` object containing the signed metadata and the signer's address and signature.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MintData"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/tree_nft/metadata/random/unsigned": {
      "get": {
        "tags": [
          "TreeNftMetadata"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataUrl"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/tree_nft/metadata": {
      "post": {
        "tags": [
          "TreeNftMetadata"
        ],
        "summary": "Inserts a new TreeNftMetadata record in the database.",
        "description": "This endpoint is only accessible to administrators.\n\n# Arguments\n- `claims`: The authenticated user's claims, used to ensure the user is an admin.\n- `db_pool`: A reference to the database connection pool.\n- `req`: The request body containing the metadata to be inserted.\n\n# Returns\nThe newly inserted `TreeNftMetadata` record.",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/AddMetadataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TreeNftMetadata"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/tree_nft/metadata/list": {
      "get": {
        "tags": [
          "TreeNftMetadata"
        ],
        "summary": "Lists all TreeNftMetadata records in the database, paginated by the given page number.",
        "description": "This endpoint is only accessible to administrators.\n\n# Arguments\n- `claims`: The authenticated user's claims, used to ensure the user is an admin.\n- `db_pool`: A reference to the database connection pool.\n- `page`: The page number to retrieve, starting from 0.\n\n# Returns\nA vector of `TreeNftMetadata` records for the given page.",
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TreeNftMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/tree_nft/metadata/{id}": {
      "get": {
        "tags": [
          "TreeNftMetadata"
        ],
        "summary": "Retrieves a TreeNftMetadata record from the database by its ID.",
        "description": "This endpoint is only accessible to administrators.\n\n# Arguments\n- `claims`: The authenticated user's claims, used to ensure the user is an admin.\n- `db_pool`: A reference to the database connection pool.\n- `id`: The ID of the TreeNftMetadata record to retrieve.\n\n# Returns\nThe requested TreeNftMetadata record, or a NotFound error if the record is not found.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TreeNftMetadata"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TreeNftMetadata"
        ],
        "summary": "Deletes a TreeNftMetadata record from the database by its ID.",
        "description": "This endpoint is only accessible to administrators.\n\n# Arguments\n- `claims`: The authenticated user's claims, used to ensure the user is an admin.\n- `db_pool`: A reference to the database connection pool.\n- `id`: The ID of the TreeNftMetadata record to delete.\n\n# Returns\nA NoResResult indicating success or failure of the deletion.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/tree_nft/metadata/{metadata_id}/owners/{page}": {
      "get": {
        "tags": [
          "TreeNftMetadata"
        ],
        "summary": "Lists the owners of the NFT with the given metadata ID for the specified contract.",
        "description": "This endpoint is only accessible to admin users.\n\n# Parameters\n- `claims`: The authenticated user's claims.\n- `db_pool`: The database connection pool.\n- `contract_index`: The index of the contract to list owners for.\n- `metadata_id`: The ID of the metadata to list owners for.\n- `page`: The page number to retrieve (optional).\n\n# Returns\nA paged response containing the list of token holders for the specified metadata.",
        "parameters": [
          {
            "name": "metadata_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_TokenHolder"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/files/s3/upload_url": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Create a presigned URL to upload a file to S3",
        "description": "Requires admin privileges\n\n# Arguments\n* `BearerAuthorization(claims): BearerAuthorization` - The bearer token claims\n* `Data(files_bucket): Data<&s3::FilesBucket>` - The S3 bucket for files\n\n# Returns\n* `Json<UploadUrlResponse>` - The presigned URL to upload the file & file name",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/files/s3/{file_name}": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete a file from S3",
        "description": "Requires admin privileges\n\n# Arguments\n* `BearerAuthorization(claims): BearerAuthorization` - The bearer token claims\n* `Data(files_bucket): Data<&s3::FilesBucket>` - The S3 bucket for files\n* `Path(file_name): Path<Uuid>` - The file name to delete\n\n# Returns\n* `NoResResult` - The result of the operation",
        "parameters": [
          {
            "name": "file_name",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/files/ipfs/upload_url": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Create a presigned URL to upload a file to IPFS",
        "description": "Requires admin privileges\n\n# Arguments\n* `BearerAuthorization(claims): BearerAuthorization` - The bearer token claims\n* `Data(files_bucket): Data<&ipfs::filebase::FilesBucket>` - The IPFS bucket for files\n\n# Returns\n* `Json<UploadUrlResponse>` - The presigned URL to upload the file & file name",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/files/ipfs/{file_name}": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete a file from IPFS",
        "description": "Requires admin privileges\n\n# Arguments\n* `BearerAuthorization(claims): BearerAuthorization` - The bearer token claims\n* `Data(files_bucket): Data<&ipfs::filebase::FilesBucket>` - The IPFS bucket for files\n* `Path(file_name): Path<Uuid>` - The file name to delete\n\n# Returns\n* `NoResResult` - The result of the operation",
        "parameters": [
          {
            "name": "file_name",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/files/s3/profile_picture_upload_url": {
      "post": {
        "tags": [
          "Files"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/identity_registry/contract": {
      "get": {
        "tags": [
          "IdentityRegistry"
        ],
        "summary": "Retrieves the details of the identity registry contract.",
        "description": "This function ensures the user is an admin, retrieves the contract details from the database, and returns the contract information as a JSON response.\n\n# Arguments\n* `db_pool` - A reference to the database connection pool.\n* `claims` - The bearer authorization claims of the authenticated user.\n* `identity_registry` - A reference to the identity registry contract address.\n\n# Returns\nA JSON result containing the `ListenerContract` details.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ListenerContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/list/{state}/{page}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "state",
            "schema": {
              "$ref": "#/components/schemas/ForestProjectState"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_ForestProjectAggApiModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/{project_id}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectAggApiModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/list/owned": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_ForestProjectAggApiModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/list/owned/download": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Disposition": {
                "description": "Indicate if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/contract/list/owned": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_ForestProjectTokenContractAggApiModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/{project_id}/media/list": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_ForestProjectMedia"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/{project_id}/media/{media_id}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "media_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectMedia"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/{project_id}/contract/list": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ForestProjectTokenContract"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/yields/total": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserYieldsAggregate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/yields/claimable": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/YieldClaim"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/{project_id}/legal_contract/sign": {
      "post": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LegalContractUserSignature"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/legal_contract/list": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_LegalContractUserModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/forest_projects/{project_id}/legal_contract": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LegalContractUserModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "summary": "Finds a forest project by its ID.\nOnly admins can access this endpoint.",
        "description": "# Arguments\n- `claims`: The claims of the authenticated user.\n- `db_pool`: The database connection pool.\n- `project_id`: The ID of the forest project to find.\n\n# Returns\nThe forest project with the given ID, or an error if the project is not found.",
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProject"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/list/{page}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "state",
            "schema": {
              "$ref": "#/components/schemas/ForestProjectState"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_ForestProject"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects": {
      "post": {
        "tags": [
          "ForestProject"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ForestProject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProject"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ForestProject"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ForestProject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProject"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}/media": {
      "post": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ForestProjectMedia"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectMedia"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}/media/{media_id}": {
      "delete": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "media_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectMedia"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}/price/latest": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectPrice"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}/price/{price_at}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "price_at",
            "schema": {
              "type": "string",
              "format": "naive-date-time"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectPrice"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "price_at",
            "schema": {
              "type": "string",
              "format": "naive-date-time"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}/price/list": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_ForestProjectPrice"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}/price": {
      "post": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ForestProjectPrice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectPrice"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/contract/{contract_address}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectTokenContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}/contract_by_type/{contract_type}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "contract_type",
            "schema": {
              "$ref": "#/components/schemas/SecurityTokenContractType"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectTokenContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/contract": {
      "post": {
        "tags": [
          "ForestProject"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ForestProjectTokenContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectTokenContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ForestProject"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ForestProjectTokenContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectTokenContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/forest_projects/{project_id}/contract/{contract_type}": {
      "delete": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "contract_type",
            "schema": {
              "$ref": "#/components/schemas/SecurityTokenContractType"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/legal_contract/list": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_LegalContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/legal_contract/{project_id}": {
      "get": {
        "tags": [
          "ForestProject"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LegalContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/legal_contract": {
      "post": {
        "tags": [
          "ForestProject"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/LegalContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LegalContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ForestProject"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/LegalContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LegalContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/portfolio/value": {
      "get": {
        "tags": [
          "InvestmentPortfolio"
        ],
        "parameters": [
          {
            "name": "at",
            "schema": {
              "type": "string",
              "format": "naive-date-time"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string",
                  "format": "decimal"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/portfolio/aggregate": {
      "get": {
        "tags": [
          "InvestmentPortfolio"
        ],
        "parameters": [
          {
            "name": "now",
            "schema": {
              "type": "string",
              "format": "naive-date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentPortfolioUserAggregate"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/portfolio/value_last_n_months/{months}": {
      "get": {
        "tags": [
          "InvestmentPortfolio"
        ],
        "parameters": [
          {
            "name": "months",
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "now",
            "schema": {
              "type": "string",
              "format": "naive-date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PortfolioValue"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/news_articles/list": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_NewsArticle"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/news_articles/{id}": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticle"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/news_articles": {
      "post": {
        "tags": [
          "UserCommunication"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/NewsArticle"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/platform_updates/list": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_PlatformUpdate"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/platform_updates/{id}": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformUpdate"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/platform_updates/latest": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformUpdate"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/platform_updates": {
      "post": {
        "tags": [
          "UserCommunication"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/PlatformUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/maintenance_messages/list": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_MaintenanceMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/maintenance_messages/{id}": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/maintenance_messages/latest": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/maintenance_messages": {
      "post": {
        "tags": [
          "UserCommunication"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/guides/list": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_Guide"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/guides/{id}": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Guide"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/guides": {
      "post": {
        "tags": [
          "UserCommunication"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Guide"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/support_questions/list": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_SupportQuestion"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/support_questions/{id}": {
      "get": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SupportQuestion"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "UserCommunication"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/support_questions": {
      "post": {
        "tags": [
          "UserCommunication"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/block/latest": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ListenerBlock"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/contract-exists": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/token-contract": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TokenContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/fp-token-contracts": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "contract_type",
            "schema": {
              "$ref": "#/components/schemas/SecurityTokenContractType"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_ForestProjectContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/fp-token-contract": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForestProjectContract"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/agents": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_Agent"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/tokens": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_Token"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/token": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/market": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Market"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/markets": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_Market"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/fund": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityMintFund"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/funds": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "investment_token_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_SecurityMintFund"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/investment-records": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "investment_token_contract",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "investment_token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "investor",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_InvestmentRecord"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/exchange-records": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "token_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "buyer",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "seller",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_ExchangeRecord"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/agent": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "agent_address",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "is_contract",
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "description": "Whether the agent_address is a contract or not",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/yields": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "token_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "yielded_token_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "yielded_token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "yield_type",
            "schema": {
              "$ref": "#/components/schemas/YieldType"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_Yield"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/yield-distributions": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "forest_project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "to_address",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "yielded_token_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "yielded_token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_UserYieldDistribution"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/yielded-tokens": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "token_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_Token"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/holders": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "forest_project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "holder_address",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_TokenHolderUser"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/holder": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "holder_address",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TokenHolderUser"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/balance-updates": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "forest_project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "holder_address",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "update_type",
            "schema": {
              "$ref": "#/components/schemas/TokenHolderBalanceUpdateType"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_TokenHolderUserBalanceUpdate"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/treasury": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Treasury"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/investors": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "forest_project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "investment_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "investment_token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "investor",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_InvestorUser"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    },
    "/admin/indexer/traders": {
      "get": {
        "tags": [
          "Indexer"
        ],
        "parameters": [
          {
            "name": "forest_project_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_contract_address",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "token_id",
            "schema": {
              "type": "string",
              "format": "decimal"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "trader",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "query",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse_TraderUser"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddMetadataRequest": {
        "type": "object",
        "required": [
          "metadata_url",
          "probability_percentage"
        ],
        "properties": {
          "metadata_url": {
            "$ref": "#/components/schemas/MetadataUrl"
          },
          "probability_percentage": {
            "type": "integer",
            "format": "int16",
            "description": "The probability of the metadata to be chosen for minting\nbetween 1 and 100"
          }
        }
      },
      "AffiliateClaim": {
        "type": "object",
        "required": [
          "forest_project_id",
          "contract_address",
          "id",
          "block_height",
          "txn_index",
          "token_contract_address",
          "token_id",
          "currency_token_id",
          "currency_token_contract_address",
          "account_address",
          "currency_amount",
          "token_amount",
          "create_time",
          "user_cognito_user_id",
          "user_email",
          "affiliate_account_address",
          "affiliate_cognito_user_id",
          "affiliate_commission",
          "affiliate_reward",
          "affiliate_remaining_reward"
        ],
        "properties": {
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "block_height": {
            "type": "string",
            "format": "decimal"
          },
          "txn_index": {
            "type": "string",
            "format": "decimal"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "account_address": {
            "type": "string"
          },
          "currency_amount": {
            "type": "string",
            "format": "decimal"
          },
          "token_amount": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "user_cognito_user_id": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "affiliate_account_address": {
            "type": "string"
          },
          "affiliate_cognito_user_id": {
            "type": "string"
          },
          "affiliate_commission": {
            "type": "string",
            "format": "decimal"
          },
          "affiliate_reward": {
            "type": "string",
            "format": "decimal"
          },
          "claim_nonce": {
            "type": "string",
            "format": "decimal"
          },
          "claim_amount": {
            "type": "string",
            "format": "decimal"
          },
          "affiliate_remaining_reward": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "Agent": {
        "type": "object",
        "required": [
          "cis2_address",
          "agent_address",
          "roles"
        ],
        "properties": {
          "cis2_address": {
            "type": "string",
            "format": "decimal"
          },
          "agent_address": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ClaimInfo": {
        "type": "object",
        "required": [
          "contract_address",
          "account",
          "account_nonce",
          "reward_id",
          "reward_token_id",
          "reward_token_contract",
          "reward_amount"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "account": {
            "type": "string"
          },
          "account_nonce": {
            "type": "integer",
            "format": "uint64"
          },
          "reward_id": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8"
            }
          },
          "reward_token_id": {
            "type": "string"
          },
          "reward_token_contract": {
            "type": "string",
            "format": "decimal"
          },
          "reward_amount": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "ClaimRequest": {
        "type": "object",
        "required": [
          "claim",
          "signer",
          "signature"
        ],
        "properties": {
          "claim": {
            "$ref": "#/components/schemas/ClaimInfo"
          },
          "signer": {
            "type": "string"
          },
          "signature": {
            "description": "Json serialized `AccountSignatures`"
          }
        }
      },
      "Company": {
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "registration_address": {
            "type": "string"
          },
          "vat_no": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "profile_picture_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "CompanyInvitation": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "email",
          "created_by",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "company_id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "ExchangeRecord": {
        "type": "object",
        "required": [
          "id",
          "block_height",
          "txn_index",
          "contract_address",
          "token_id",
          "token_contract_address",
          "currency_token_id",
          "currency_token_contract_address",
          "seller",
          "buyer",
          "currency_amount",
          "token_amount",
          "rate",
          "create_time",
          "exchange_record_type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "block_height": {
            "type": "string",
            "format": "decimal"
          },
          "txn_index": {
            "type": "string",
            "format": "decimal"
          },
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "seller": {
            "type": "string"
          },
          "buyer": {
            "type": "string"
          },
          "currency_amount": {
            "type": "string",
            "format": "decimal"
          },
          "token_amount": {
            "type": "string",
            "format": "decimal"
          },
          "rate": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "exchange_record_type": {
            "$ref": "#/components/schemas/ExchangeRecordType"
          }
        }
      },
      "ExchangeRecordType": {
        "type": "string",
        "enum": [
          "Buy",
          "Sell",
          "Mint"
        ]
      },
      "ForestProject": {
        "type": "object",
        "required": [
          "id",
          "name",
          "label",
          "desc_short",
          "desc_long",
          "area",
          "carbon_credits",
          "roi_percent",
          "state",
          "image_large_url",
          "image_small_url",
          "shares_available",
          "property_media_header",
          "property_media_footer",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "desc_short": {
            "type": "string"
          },
          "desc_long": {
            "type": "string"
          },
          "area": {
            "type": "string"
          },
          "carbon_credits": {
            "type": "integer",
            "format": "int32"
          },
          "roi_percent": {
            "type": "number",
            "format": "float"
          },
          "state": {
            "$ref": "#/components/schemas/ForestProjectState"
          },
          "image_large_url": {
            "type": "string"
          },
          "image_small_url": {
            "type": "string"
          },
          "shares_available": {
            "type": "integer",
            "format": "int32"
          },
          "property_media_header": {
            "type": "string"
          },
          "property_media_footer": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "offering_doc_title": {
            "type": "string"
          },
          "offering_doc_header": {
            "type": "string"
          },
          "offering_doc_img_url": {
            "type": "string"
          },
          "offering_doc_footer": {
            "type": "string"
          },
          "financial_projection_title": {
            "type": "string"
          },
          "financial_projection_header": {
            "type": "string"
          },
          "financial_projection_img_url": {
            "type": "string"
          },
          "financial_projection_footer": {
            "type": "string"
          },
          "geo_title": {
            "type": "string"
          },
          "geo_header": {
            "type": "string"
          },
          "geo_img_url": {
            "type": "string"
          },
          "geo_footer": {
            "type": "string"
          }
        }
      },
      "ForestProjectAggApiModel": {
        "type": "object",
        "required": [
          "forest_project",
          "supply",
          "user_balance",
          "contract_signed",
          "user_notified"
        ],
        "properties": {
          "forest_project": {
            "$ref": "#/components/schemas/ForestProject"
          },
          "supply": {
            "type": "string",
            "format": "decimal"
          },
          "user_balance": {
            "type": "string",
            "format": "decimal"
          },
          "property_contract": {
            "$ref": "#/components/schemas/ForestProjectTokenContract"
          },
          "property_market": {
            "$ref": "#/components/schemas/Market"
          },
          "property_fund": {
            "$ref": "#/components/schemas/SecurityMintFund"
          },
          "bond_contract": {
            "$ref": "#/components/schemas/ForestProjectTokenContract"
          },
          "bond_market": {
            "$ref": "#/components/schemas/Market"
          },
          "bond_fund": {
            "$ref": "#/components/schemas/SecurityMintFund"
          },
          "contract_signed": {
            "type": "boolean"
          },
          "user_notified": {
            "type": "boolean"
          }
        }
      },
      "ForestProjectContract": {
        "type": "object",
        "required": [
          "contract_address",
          "module_ref",
          "contract_name",
          "owner",
          "forest_project_id",
          "forest_project_name",
          "contract_type",
          "symbol",
          "decimals",
          "metadata_url",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "module_ref": {
            "type": "string"
          },
          "contract_name": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "identity_registry": {
            "type": "string",
            "format": "decimal"
          },
          "compliance_contract": {
            "type": "string"
          },
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "forest_project_name": {
            "type": "string"
          },
          "contract_type": {
            "$ref": "#/components/schemas/SecurityTokenContractType"
          },
          "fund_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "symbol": {
            "type": "string"
          },
          "decimals": {
            "type": "integer",
            "format": "int32"
          },
          "metadata_url": {
            "type": "string"
          },
          "metadata_hash": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "ForestProjectMedia": {
        "type": "object",
        "required": [
          "id",
          "image_url",
          "project_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "image_url": {
            "type": "string"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ForestProjectPrice": {
        "type": "object",
        "required": [
          "project_id",
          "price",
          "price_at",
          "currency_token_id",
          "currency_token_contract_address"
        ],
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "price": {
            "type": "string",
            "format": "decimal"
          },
          "price_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "ForestProjectState": {
        "type": "string",
        "enum": [
          "Draft",
          "Active",
          "Funded",
          "Bond",
          "Archived"
        ]
      },
      "ForestProjectTokenContract": {
        "type": "object",
        "required": [
          "contract_address",
          "forest_project_id",
          "contract_type",
          "symbol",
          "decimals",
          "metadata_url",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "contract_type": {
            "$ref": "#/components/schemas/SecurityTokenContractType"
          },
          "fund_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "symbol": {
            "type": "string"
          },
          "decimals": {
            "type": "integer",
            "format": "int32"
          },
          "metadata_url": {
            "type": "string"
          },
          "metadata_hash": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "ForestProjectTokenContractAggApiModel": {
        "type": "object",
        "required": [
          "forest_project_id",
          "forest_project_name",
          "token_contract_type",
          "token_contract_address",
          "user_balance",
          "user_balance_price",
          "carbon_credit_yield_balance",
          "euro_e_yields_balance"
        ],
        "properties": {
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "forest_project_name": {
            "type": "string"
          },
          "token_contract_type": {
            "$ref": "#/components/schemas/SecurityTokenContractType"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "user_balance": {
            "type": "string",
            "format": "decimal"
          },
          "user_balance_price": {
            "type": "string",
            "format": "decimal"
          },
          "carbon_credit_yield_balance": {
            "type": "string",
            "format": "decimal"
          },
          "euro_e_yields_balance": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "Guide": {
        "type": "object",
        "required": [
          "id",
          "title",
          "label",
          "created_at",
          "order_index",
          "guide_url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "order_index": {
            "type": "integer",
            "format": "int32"
          },
          "guide_url": {
            "type": "string"
          }
        }
      },
      "InvestmentPortfolioUserAggregate": {
        "type": "object",
        "required": [
          "locked_mint_fund_euro_e_amount",
          "invested_value",
          "current_portfolio_value",
          "yearly_return",
          "return_on_investment",
          "carbon_tons_offset"
        ],
        "properties": {
          "locked_mint_fund_euro_e_amount": {
            "type": "string",
            "format": "decimal",
            "description": "The amount of locked euros in the all the mint fund contracts"
          },
          "invested_value": {
            "type": "string",
            "format": "decimal",
            "description": "Sum of the amount invested in the mint funds and the amount bought in the P2P trading"
          },
          "current_portfolio_value": {
            "type": "string",
            "format": "decimal",
            "description": "Sum Of(Balance of each Forest Project Token * the current price of the token)"
          },
          "yearly_return": {
            "type": "string",
            "format": "decimal",
            "description": "Current portfolio value - Portfolio value at the beginning of the year - Amount invested in the year + Amount withdrawn in the year"
          },
          "return_on_investment": {
            "type": "string",
            "format": "decimal",
            "description": "(Current portfolio value - Amount withdrawn) / Total amount invested"
          },
          "carbon_tons_offset": {
            "type": "string",
            "format": "decimal",
            "description": "The total amount of carbon credit tokens burned"
          }
        }
      },
      "InvestmentRecord": {
        "type": "object",
        "required": [
          "id",
          "block_height",
          "txn_index",
          "contract_address",
          "investment_token_id",
          "investment_token_contract_address",
          "currency_token_id",
          "currency_token_contract_address",
          "investor",
          "currency_amount",
          "token_amount",
          "currency_amount_balance",
          "token_amount_balance",
          "investment_record_type",
          "create_time"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "block_height": {
            "type": "string",
            "format": "decimal"
          },
          "txn_index": {
            "type": "string",
            "format": "decimal"
          },
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "investment_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "investment_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "investor": {
            "type": "string"
          },
          "currency_amount": {
            "type": "string",
            "format": "decimal"
          },
          "token_amount": {
            "type": "string",
            "format": "decimal"
          },
          "currency_amount_balance": {
            "type": "string",
            "format": "decimal"
          },
          "token_amount_balance": {
            "type": "string",
            "format": "decimal"
          },
          "investment_record_type": {
            "$ref": "#/components/schemas/InvestmentRecordType"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "InvestmentRecordType": {
        "type": "string",
        "enum": [
          "Invested",
          "Cancelled",
          "Claimed"
        ]
      },
      "InvestorUser": {
        "type": "object",
        "required": [
          "contract_address",
          "investment_token_id",
          "investment_token_contract_address",
          "investor",
          "currency_token_id",
          "currency_token_contract_address",
          "currency_amount",
          "currency_amount_total",
          "token_amount",
          "token_amount_total",
          "create_time",
          "update_time"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "investment_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "investment_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "investor": {
            "type": "string"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_amount": {
            "type": "string",
            "format": "decimal"
          },
          "currency_amount_total": {
            "type": "string",
            "format": "decimal"
          },
          "token_amount": {
            "type": "string",
            "format": "decimal"
          },
          "token_amount_total": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "forest_project_name": {
            "type": "string"
          },
          "forest_project_contract_type": {
            "$ref": "#/components/schemas/SecurityTokenContractType"
          }
        }
      },
      "LegalContract": {
        "type": "object",
        "required": [
          "project_id",
          "name",
          "tag",
          "text_url",
          "edoc_url",
          "pdf_url",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "text_url": {
            "type": "string"
          },
          "edoc_url": {
            "type": "string"
          },
          "pdf_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "LegalContractUserModel": {
        "type": "object",
        "required": [
          "project_id",
          "name",
          "tag",
          "text_url",
          "edoc_url",
          "pdf_url",
          "created_at",
          "cognito_user_id",
          "signed_date"
        ],
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "text_url": {
            "type": "string"
          },
          "edoc_url": {
            "type": "string"
          },
          "pdf_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "signed_date": {
            "type": "string",
            "format": "naive-date-time"
          },
          "user_token_balance": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "LegalContractUserSignature": {
        "type": "object",
        "required": [
          "project_id",
          "cognito_user_id",
          "user_account",
          "user_signature",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "user_account": {
            "type": "string"
          },
          "user_signature": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "ListenerBlock": {
        "type": "object",
        "required": [
          "block_height",
          "block_hash",
          "block_slot_time"
        ],
        "properties": {
          "block_height": {
            "type": "string",
            "format": "decimal"
          },
          "block_hash": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8"
            }
          },
          "block_slot_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "ListenerContract": {
        "type": "object",
        "required": [
          "module_ref",
          "contract_name",
          "contract_address",
          "owner",
          "processor_type",
          "created_at"
        ],
        "properties": {
          "module_ref": {
            "type": "string"
          },
          "contract_name": {
            "type": "string"
          },
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "owner": {
            "type": "string"
          },
          "processor_type": {
            "$ref": "#/components/schemas/ProcessorType"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "MaintenanceMessage": {
        "type": "object",
        "required": [
          "id",
          "message",
          "created_at",
          "order_index"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "order_index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Market": {
        "type": "object",
        "required": [
          "contract_address",
          "token_contract_address",
          "currency_token_id",
          "currency_token_contract_address",
          "liquidity_provider",
          "create_time",
          "update_time",
          "market_type",
          "max_token_amount",
          "token_in_amount",
          "currency_out_amount",
          "token_out_amount",
          "currency_in_amount"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "liquidity_provider": {
            "type": "string"
          },
          "buy_rate_numerator": {
            "type": "string",
            "format": "decimal",
            "description": "Rate at which the liquidity provider is buying tokens. This is the sell rate for users of the contract."
          },
          "buy_rate_denominator": {
            "type": "string",
            "format": "decimal"
          },
          "sell_rate_numerator": {
            "type": "string",
            "format": "decimal",
            "description": "Rate at which the liquidity provider is selling tokens. This is the buy rate for the users of the contract."
          },
          "sell_rate_denominator": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "token_id_calculation_start": {
            "type": "string",
            "format": "decimal",
            "description": "In case of mint market this is the start of the market. Also the start of the calculation of the token id."
          },
          "token_id_calculation_diff_millis": {
            "type": "string",
            "format": "decimal",
            "description": "In case of mint market this is the Milliseconds value after which the Market will move to the next token id."
          },
          "token_id_calculation_base_token_id": {
            "type": "string",
            "format": "decimal",
            "description": "In case of mint market this is the base token id. The token id will be calculated as base_token_id + (current_time - token_id_calculation_start) / token_id_calculation_diff_millis"
          },
          "market_type": {
            "$ref": "#/components/schemas/MarketType"
          },
          "max_token_amount": {
            "type": "string",
            "format": "decimal",
            "description": "Maximum amount of tokens which the market can give out / sell.\nThis value will decrease when someone buys and increase when someone sells"
          },
          "max_currency_amount": {
            "type": "string",
            "format": "decimal",
            "description": "Maximum amount of currency units which this market will give out.\nThis value will decrease when someone sell and increases when someone buys"
          },
          "token_in_amount": {
            "type": "string",
            "format": "decimal",
            "description": "Total amount  of tokens which the market as bought / users have sold."
          },
          "currency_out_amount": {
            "type": "string",
            "format": "decimal",
            "description": "Total amount of currency units which the market has given out / users have sold tokens."
          },
          "token_out_amount": {
            "type": "string",
            "format": "decimal",
            "description": "Total amount of tokens which the market has given out / users have bought tokens."
          },
          "currency_in_amount": {
            "type": "string",
            "format": "decimal",
            "description": "Total amount of currency units which the market has received / users have bought tokens."
          }
        }
      },
      "MarketType": {
        "type": "string",
        "enum": [
          "Mint",
          "Transfer"
        ]
      },
      "MetadataUrl": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          }
        }
      },
      "MintData": {
        "type": "object",
        "required": [
          "signed_metadata",
          "signer",
          "signature"
        ],
        "properties": {
          "signed_metadata": {
            "$ref": "#/components/schemas/SignedMetadata"
          },
          "signer": {
            "type": "string"
          },
          "signature": {
            "description": "Json serialized `AccountSignatures`"
          }
        }
      },
      "NewsArticle": {
        "type": "object",
        "required": [
          "id",
          "title",
          "label",
          "content",
          "image_url",
          "article_url",
          "created_at",
          "order_index"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "article_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "order_index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NftMultiRewardedContract": {
        "type": "object",
        "required": [
          "contract_address",
          "reward_token_address",
          "reward_token_id",
          "create_time",
          "update_time"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "reward_token_address": {
            "type": "string",
            "format": "decimal"
          },
          "reward_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "NftMultiRewardedDetails": {
        "type": "object",
        "required": [
          "contract",
          "tokens_count",
          "unique_metdata_count"
        ],
        "properties": {
          "contract": {
            "$ref": "#/components/schemas/NftMultiRewardedContract"
          },
          "tokens_count": {
            "type": "integer",
            "format": "uint64"
          },
          "unique_metdata_count": {
            "type": "integer",
            "format": "uint64"
          }
        }
      },
      "Notification": {
        "type": "object",
        "required": [
          "id",
          "project_id",
          "cognito_user_id",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "P2PTradeContract": {
        "type": "object",
        "description": "Represents a contract in the security P2P trading system.",
        "required": [
          "contract_address",
          "currency_token_contract_address",
          "currency_token_id",
          "total_sell_currency_amount",
          "create_time"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "total_sell_currency_amount": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "PagedResponse_AffiliateClaim": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateClaim"
            }
          }
        }
      },
      "PagedResponse_Agent": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Agent"
            }
          }
        }
      },
      "PagedResponse_CompanyInvitation": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyInvitation"
            }
          }
        }
      },
      "PagedResponse_ExchangeRecord": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeRecord"
            }
          }
        }
      },
      "PagedResponse_ForestProject": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForestProject"
            }
          }
        }
      },
      "PagedResponse_ForestProjectAggApiModel": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForestProjectAggApiModel"
            }
          }
        }
      },
      "PagedResponse_ForestProjectContract": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForestProjectContract"
            }
          }
        }
      },
      "PagedResponse_ForestProjectMedia": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForestProjectMedia"
            }
          }
        }
      },
      "PagedResponse_ForestProjectPrice": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForestProjectPrice"
            }
          }
        }
      },
      "PagedResponse_ForestProjectTokenContractAggApiModel": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForestProjectTokenContractAggApiModel"
            }
          }
        }
      },
      "PagedResponse_Guide": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Guide"
            }
          }
        }
      },
      "PagedResponse_InvestmentRecord": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvestmentRecord"
            }
          }
        }
      },
      "PagedResponse_InvestorUser": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvestorUser"
            }
          }
        }
      },
      "PagedResponse_LegalContract": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalContract"
            }
          }
        }
      },
      "PagedResponse_LegalContractUserModel": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalContractUserModel"
            }
          }
        }
      },
      "PagedResponse_MaintenanceMessage": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceMessage"
            }
          }
        }
      },
      "PagedResponse_Market": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Market"
            }
          }
        }
      },
      "PagedResponse_NewsArticle": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsArticle"
            }
          }
        }
      },
      "PagedResponse_PlatformUpdate": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformUpdate"
            }
          }
        }
      },
      "PagedResponse_SecurityMintFund": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityMintFund"
            }
          }
        }
      },
      "PagedResponse_SupportQuestion": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportQuestion"
            }
          }
        }
      },
      "PagedResponse_Token": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          }
        }
      },
      "PagedResponse_TokenHolder": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenHolder"
            }
          }
        }
      },
      "PagedResponse_TokenHolderUser": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenHolderUser"
            }
          }
        }
      },
      "PagedResponse_TokenHolderUserBalanceUpdate": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenHolderUserBalanceUpdate"
            }
          }
        }
      },
      "PagedResponse_TraderUser": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TraderUser"
            }
          }
        }
      },
      "PagedResponse_UserKYCModel": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserKYCModel"
            }
          }
        }
      },
      "PagedResponse_UserRegistrationRequest": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRegistrationRequest"
            }
          }
        }
      },
      "PagedResponse_UserTokenHolder": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTokenHolder"
            }
          }
        }
      },
      "PagedResponse_UserTransaction": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTransaction"
            }
          }
        }
      },
      "PagedResponse_UserYieldDistribution": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserYieldDistribution"
            }
          }
        }
      },
      "PagedResponse_Yield": {
        "type": "object",
        "description": "Pages Response. This is a generic response that can be used to return a list\nof items with pagination.",
        "required": [
          "page_count",
          "page",
          "data"
        ],
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Yield"
            }
          }
        }
      },
      "PlatformUpdate": {
        "type": "object",
        "required": [
          "id",
          "title",
          "label",
          "created_at",
          "order_index"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "order_index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PortfolioValue": {
        "type": "object",
        "required": [
          "portfolio_value",
          "at"
        ],
        "properties": {
          "portfolio_value": {
            "type": "string",
            "format": "decimal"
          },
          "at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "ProcessorType": {
        "type": "string",
        "description": "The processor type of a contract.\nThe processor type is used to determine which processor to use when processing events.\n### Caution! This is persisted to the database. Hence changing the processor type requires a migration.",
        "enum": [
          "IdentityRegistry",
          "SecuritySftSingle",
          "SecuritySftRewards",
          "NftMultiRewarded",
          "SecurityMintFund",
          "SecurityP2PTrading",
          "OffchainRewards",
          "SecuritySftMulti",
          "SecuritySftMultiYielder"
        ]
      },
      "SecurityMintFund": {
        "type": "object",
        "required": [
          "contract_address",
          "investment_token_id",
          "investment_token_contract_address",
          "token_id",
          "token_contract_address",
          "currency_token_id",
          "currency_token_contract_address",
          "currency_amount",
          "token_amount",
          "rate_numerator",
          "rate_denominator",
          "fund_state",
          "create_time",
          "update_time"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "investment_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "investment_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_amount": {
            "type": "string",
            "format": "decimal"
          },
          "token_amount": {
            "type": "string",
            "format": "decimal"
          },
          "receiver_address": {
            "type": "string"
          },
          "rate_numerator": {
            "type": "string",
            "format": "decimal"
          },
          "rate_denominator": {
            "type": "string",
            "format": "decimal"
          },
          "fund_state": {
            "$ref": "#/components/schemas/SecurityMintFundState"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "SecurityMintFundContract": {
        "type": "object",
        "required": [
          "contract_address",
          "currency_token_contract_address",
          "currency_token_id",
          "create_time"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "SecurityMintFundState": {
        "type": "string",
        "enum": [
          "Open",
          "Success",
          "Fail"
        ]
      },
      "SecurityTokenContractType": {
        "type": "string",
        "enum": [
          "Property",
          "Bond",
          "PropertyPreSale",
          "BondPreSale"
        ]
      },
      "SignedMetadata": {
        "type": "object",
        "required": [
          "contract_address",
          "metadata_url",
          "account",
          "account_nonce"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "metadata_url": {
            "$ref": "#/components/schemas/MetadataUrl"
          },
          "account": {
            "type": "string"
          },
          "account_nonce": {
            "type": "integer",
            "format": "uint64"
          }
        }
      },
      "SupportQuestion": {
        "type": "object",
        "required": [
          "id",
          "cognito_user_id",
          "user_email",
          "message",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "SystemContractsConfigApiModel": {
        "type": "object",
        "required": [
          "identity_registry_contract_index",
          "compliance_contract_index",
          "carbon_credit_contract_index",
          "carbon_credit_token_id",
          "euro_e_contract_index",
          "euro_e_token_id",
          "tree_ft_contract_index",
          "tree_nft_contract_index",
          "offchain_rewards_contract_index",
          "mint_funds_contract_index",
          "trading_contract_index",
          "yielder_contract_index",
          "mint_funds_contract",
          "trading_contract"
        ],
        "properties": {
          "identity_registry_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "compliance_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "carbon_credit_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "carbon_credit_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "euro_e_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "euro_e_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "tree_ft_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "tree_nft_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "offchain_rewards_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "mint_funds_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "trading_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "yielder_contract_index": {
            "type": "string",
            "format": "decimal"
          },
          "mint_funds_contract": {
            "$ref": "#/components/schemas/SecurityMintFundContract"
          },
          "trading_contract": {
            "$ref": "#/components/schemas/P2PTradeContract"
          }
        }
      },
      "Token": {
        "type": "object",
        "required": [
          "cis2_address",
          "token_id",
          "is_paused",
          "metadata_url",
          "supply",
          "create_time",
          "update_time"
        ],
        "properties": {
          "cis2_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "is_paused": {
            "type": "boolean"
          },
          "metadata_url": {
            "type": "string"
          },
          "metadata_hash": {
            "type": "string"
          },
          "supply": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "TokenContract": {
        "type": "object",
        "required": [
          "contract_address",
          "module_ref",
          "contract_name",
          "owner",
          "created_at"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "module_ref": {
            "type": "string"
          },
          "contract_name": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "identity_registry": {
            "type": "string",
            "format": "decimal"
          },
          "compliance_contract": {
            "type": "string"
          }
        }
      },
      "TokenHolder": {
        "type": "object",
        "required": [
          "cis2_address",
          "token_id",
          "holder_address",
          "frozen_balance",
          "un_frozen_balance",
          "create_time",
          "update_time"
        ],
        "properties": {
          "cis2_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "holder_address": {
            "type": "string"
          },
          "frozen_balance": {
            "type": "string",
            "format": "decimal"
          },
          "un_frozen_balance": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "TokenHolderBalanceUpdateType": {
        "type": "string",
        "enum": [
          "Mint",
          "Burn",
          "TransferOut",
          "TransferIn",
          "Freeze",
          "UnFreeze"
        ]
      },
      "TokenHolderUser": {
        "type": "object",
        "required": [
          "cis2_address",
          "token_id",
          "holder_address",
          "frozen_balance",
          "un_frozen_balance",
          "create_time",
          "update_time"
        ],
        "properties": {
          "cis2_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "holder_address": {
            "type": "string"
          },
          "frozen_balance": {
            "type": "string",
            "format": "decimal"
          },
          "un_frozen_balance": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "forest_project_name": {
            "type": "string"
          },
          "forest_project_contract_type": {
            "$ref": "#/components/schemas/SecurityTokenContractType"
          }
        }
      },
      "TokenHolderUserBalanceUpdate": {
        "type": "object",
        "required": [
          "id",
          "block_height",
          "txn_index",
          "cis2_address",
          "token_id",
          "holder_address",
          "amount",
          "frozen_balance",
          "un_frozen_balance",
          "txn_sender",
          "txn_instigator",
          "update_type",
          "create_time"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "block_height": {
            "type": "string",
            "format": "decimal"
          },
          "txn_index": {
            "type": "string",
            "format": "decimal"
          },
          "cis2_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "holder_address": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "format": "decimal"
          },
          "frozen_balance": {
            "type": "string",
            "format": "decimal"
          },
          "un_frozen_balance": {
            "type": "string",
            "format": "decimal"
          },
          "txn_sender": {
            "type": "string"
          },
          "txn_instigator": {
            "type": "string"
          },
          "update_type": {
            "$ref": "#/components/schemas/TokenHolderBalanceUpdateType"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "forest_project_name": {
            "type": "string"
          },
          "forest_project_contract_type": {
            "$ref": "#/components/schemas/SecurityTokenContractType"
          }
        }
      },
      "TraderUser": {
        "type": "object",
        "required": [
          "contract_address",
          "token_id",
          "token_contract_address",
          "currency_token_id",
          "currency_token_contract_address",
          "trader",
          "token_in_amount",
          "token_out_amount",
          "currency_in_amount",
          "currency_out_amount",
          "create_time",
          "update_time"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "trader": {
            "type": "string"
          },
          "token_in_amount": {
            "type": "string",
            "format": "decimal"
          },
          "token_out_amount": {
            "type": "string",
            "format": "decimal"
          },
          "currency_in_amount": {
            "type": "string",
            "format": "decimal"
          },
          "currency_out_amount": {
            "type": "string",
            "format": "decimal"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "forest_project_name": {
            "type": "string"
          },
          "forest_project_contract_type": {
            "$ref": "#/components/schemas/SecurityTokenContractType"
          }
        }
      },
      "Treasury": {
        "type": "object",
        "required": [
          "contract_address",
          "treasury_address",
          "create_time",
          "update_time"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "treasury_address": {
            "type": "string"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "update_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "TreeNftMetadata": {
        "type": "object",
        "required": [
          "id",
          "metadata_url",
          "probablity_percentage",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "metadata_url": {
            "type": "string"
          },
          "metadata_hash": {
            "type": "string"
          },
          "probablity_percentage": {
            "type": "integer",
            "format": "int16"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "UploadUrlResponse": {
        "type": "object",
        "description": "Represents the response from an IPFS file upload request, containing the\npresigned URL for uploading the file and the generated file name.",
        "required": [
          "presigned_url",
          "file_name"
        ],
        "properties": {
          "presigned_url": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          }
        }
      },
      "UserCompanyCreateUpdateReq": {
        "type": "object",
        "required": [
          "name",
          "registration_address",
          "vat_no",
          "country",
          "profile_picture_url"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "registration_address": {
            "type": "string"
          },
          "vat_no": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "profile_picture_url": {
            "type": "string"
          }
        }
      },
      "UserCompanyInvitationCreateReq": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "UserCreatePostReq": {
        "type": "object",
        "required": [
          "email",
          "temp_password",
          "account_address",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "temp_password": {
            "type": "string"
          },
          "account_address": {
            "type": "string"
          },
          "desired_investment_amount": {
            "type": "integer",
            "format": "int32"
          },
          "proof": {},
          "password": {
            "type": "string"
          },
          "affiliate_commission": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "UserCreatePostReqAdmin": {
        "type": "object",
        "required": [
          "email",
          "account_address",
          "password",
          "first_name",
          "last_name",
          "nationality"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "account_address": {
            "type": "string"
          },
          "desired_investment_amount": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "affiliate_commission": {
            "type": "string",
            "format": "decimal"
          },
          "affiliate_account_address": {
            "type": "string"
          }
        }
      },
      "UserKYCModel": {
        "type": "object",
        "required": [
          "cognito_user_id",
          "email",
          "account_address",
          "first_name",
          "last_name",
          "nationality",
          "affiliate_commission",
          "kyc_verified"
        ],
        "properties": {
          "cognito_user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "account_address": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "desired_investment_amount": {
            "type": "integer",
            "format": "int32"
          },
          "affiliate_commission": {
            "type": "string",
            "format": "decimal"
          },
          "affiliate_account_address": {
            "type": "string"
          },
          "kyc_verified": {
            "type": "boolean"
          }
        }
      },
      "UserRegistrationRequest": {
        "type": "object",
        "required": [
          "id",
          "email",
          "is_accepted",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "affiliate_account_address": {
            "type": "string"
          },
          "is_accepted": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "UserRegistrationRequestApi": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "affiliate_account_address": {
            "type": "string"
          }
        }
      },
      "UserTokenHolder": {
        "type": "object",
        "required": [
          "cognito_user_id",
          "account_address",
          "first_name",
          "last_name",
          "email",
          "token_id",
          "token_contract_address",
          "balance_frozen",
          "balance_unfrozen",
          "balance_total"
        ],
        "properties": {
          "cognito_user_id": {
            "type": "string"
          },
          "account_address": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "balance_frozen": {
            "type": "string",
            "format": "decimal"
          },
          "balance_unfrozen": {
            "type": "string",
            "format": "decimal"
          },
          "balance_total": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "UserTransaction": {
        "type": "object",
        "required": [
          "transaction_hash",
          "block_height",
          "forest_project_id",
          "currency_token_id",
          "currency_token_contract_address",
          "currency_amount",
          "cognito_user_id",
          "transaction_type",
          "account_address"
        ],
        "properties": {
          "transaction_hash": {
            "type": "string"
          },
          "block_height": {
            "type": "string",
            "format": "decimal"
          },
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "currency_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "currency_token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "currency_amount": {
            "type": "string",
            "format": "decimal"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "transaction_type": {
            "type": "string"
          },
          "account_address": {
            "type": "string"
          }
        }
      },
      "UserYieldDistribution": {
        "type": "object",
        "required": [
          "id",
          "contract_address",
          "token_contract_address",
          "from_token_version",
          "to_token_version",
          "token_amount",
          "yield_contract_address",
          "yield_token_id",
          "yield_amount",
          "to_address",
          "create_time"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "from_token_version": {
            "type": "string",
            "format": "decimal"
          },
          "to_token_version": {
            "type": "string",
            "format": "decimal"
          },
          "token_amount": {
            "type": "string",
            "format": "decimal"
          },
          "yield_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "yield_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "yield_amount": {
            "type": "string",
            "format": "decimal"
          },
          "to_address": {
            "type": "string"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          },
          "cognito_user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "forest_project_id": {
            "type": "string",
            "format": "uuid"
          },
          "forest_project_name": {
            "type": "string"
          },
          "forest_project_contract_type": {
            "$ref": "#/components/schemas/SecurityTokenContractType"
          }
        }
      },
      "UserYieldsAggregate": {
        "type": "object",
        "required": [
          "yield_token_id",
          "yield_contract_address",
          "yield_amount"
        ],
        "properties": {
          "yield_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "yield_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "yield_amount": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "Yield": {
        "type": "object",
        "required": [
          "contract_address",
          "token_contract_address",
          "token_id",
          "yield_contract_address",
          "yield_token_id",
          "yield_rate_numerator",
          "yield_rate_denominator",
          "yield_type",
          "create_time"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "yield_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "yield_token_id": {
            "type": "string",
            "format": "decimal"
          },
          "yield_rate_numerator": {
            "type": "string",
            "format": "decimal"
          },
          "yield_rate_denominator": {
            "type": "string",
            "format": "decimal"
          },
          "yield_type": {
            "$ref": "#/components/schemas/YieldType"
          },
          "create_time": {
            "type": "string",
            "format": "naive-date-time"
          }
        }
      },
      "YieldClaim": {
        "type": "object",
        "required": [
          "token_contract_address",
          "token_id",
          "token_balance",
          "max_token_id"
        ],
        "properties": {
          "token_contract_address": {
            "type": "string",
            "format": "decimal"
          },
          "token_id": {
            "type": "string",
            "format": "decimal"
          },
          "token_balance": {
            "type": "string",
            "format": "decimal"
          },
          "max_token_id": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "YieldType": {
        "type": "string",
        "enum": [
          "Quantity",
          "SimpleIntrest"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuthorization": {
        "type": "http",
        "description": "ApiKey authorization",
        "scheme": "bearer",
        "bearerFormat": "bearer"
      }
    }
  }
}